// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º—É—á–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let failedAttempts = 0;
let captchaAttempts = 0;
let formSubmissions = 0;
let lastMouseMove = Date.now();
let lastModalTime = Date.now();

// –ú–∞—Å—Å–∏–≤ –ø—É—Ç–µ–π –∫ –º–µ–º–∞–º
const memeImages = [
    'img/98783-meme-dank-free-download-image.png',
    'img/98777-meme-dank-free-download-png-hq.png',
    'img/97892-meme-face-lenny-download-hq.png',
    'img/97899-meme-face-lenny-download-free-image.png',
    'img/98791-meme-picture-dank-free-photo.png',
    'img/98789-meme-pic-dank-free-clipart-hq.png',
    'img/98795-meme-picture-dank-free-download-image.png',
    'img/98240-meme-photos-angry-no-face.png',
    'img/97958-me-meme-gusta-hq-image-free.png',
    'img/98213-meme-angry-face-download-hq.png',
    'img/97710-meme-photos-frog-download-hq.png',
    'img/97699-meme-frog-hd-image-free.png',
    'img/97715-meme-frog-hd-image-free.png',
    'img/97728-meme-frog-free-clipart-hd.png',
    'img/29069-4-lol-clipart.png',
    'img/97941-me-meme-gusta-download-hq.png',
    'img/97580-meme-photos-doge-hd-image-free.png',
    'img/29115-6-lol-image.png',
    'img/97703-meme-frog-free-hd-image.png',
    'img/3-2-troll-face-meme-png.png'
];

// –ú–∞—Å—Å–∏–≤ —Ä–∞–∑–¥—Ä–∞–∂–∞—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
const annoyingMessages = [
    { title: "üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú!", message: "–í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã–∏–≥—Ä–∞–ª–∏ iPhone 15 Pro Max!" },
    { title: "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï!", message: "–í–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä –∑–∞—Ä–∞–∂–µ–Ω 69 –≤–∏—Ä—É—Å–∞–º–∏!" },
    { title: "üí∞ –í–ê–£!", message: "–í—ã 1,000,000-–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å –Ω–∞—à–µ–≥–æ —Å–∞–π—Ç–∞!" },
    { title: "üî• –°–†–û–ß–ù–û!", message: "–ì–æ—Ä—è—á–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! –û—Å—Ç–∞–ª–æ—Å—å 5 —Å–µ–∫—É–Ω–¥!" },
    { title: "üéÆ –ò–ì–†–´!", message: "–•–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É?" },
    { title: "üì¢ –í–ê–ñ–ù–û!", message: "–í—ã –Ω–µ –ø–æ–≤–µ—Ä–∏—Ç–µ, —á—Ç–æ —Å–µ–π—á–∞—Å –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç!" },
    { title: "üåü –í–´ –û–°–û–ë–ï–ù–ù–´–ô!", message: "–í—ã –∏–∑–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!" },
    { title: "üîî –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!", message: "–£ –≤–∞—Å 10 –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!" },
    { title: "üéµ –ú–£–ó–´–ö–ê!", message: "–•–æ—Ç–∏—Ç–µ –ø–æ—Å–ª—É—à–∞—Ç—å –ª—é–±–∏–º—É—é –ø–µ—Å–Ω—é?" },
    { title: "üéÅ –ü–û–î–ê–†–û–ö!", message: "–í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–∏–∑!" }
];

let chaosLevel = 0;
let lastChaosUpdate = Date.now();
const chaosInterval = 5000; // 5 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É —É—Ä–æ–≤–Ω—è–º–∏ —Ö–∞–æ—Å–∞

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤ —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
function createRandomAd() {
    const ad = document.createElement('div');
    ad.className = 'ad';
    ad.style.top = Math.random() * window.innerHeight + 'px';
    ad.style.left = Math.random() * window.innerWidth + 'px';
    ad.style.backgroundColor = `rgb(${Math.random() * 255},${Math.random() * 255},${Math.random() * 255})`;
    
    const randomMessage = annoyingMessages[Math.floor(Math.random() * annoyingMessages.length)];
    
    ad.innerHTML = `
        <h3>${randomMessage.title}</h3>
        <p>${randomMessage.message}</p>
        <button onclick="this.parentElement.style.zIndex++">–ó–∞–∫—Ä—ã—Ç—å (–Ω–æ –Ω–µ –∑–∞–∫—Ä–æ–µ—Ç—Å—è)</button>
    `;
    document.getElementById('ads-container').appendChild(ad);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–≤–∞—é—â–µ–π –º–æ–¥–∞–ª–∫–∏
function createFloatingModal(title, message) {
    const modal = document.createElement('div');
    modal.className = 'floating-modal';
    
    // –°–ª—É—á–∞–π–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
    modal.style.left = Math.random() * (window.innerWidth - 400) + 'px';
    modal.style.top = Math.random() * (window.innerHeight - 300) + 'px';
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
    modal.innerHTML = `
        <h2>${title}</h2>
        <p>${message}</p>
    `;
    
    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –≤ —Å–ª—É—á–∞–π–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
    const buttonCount = Math.floor(Math.random() * 3) + 2; // 2-4 –∫–Ω–æ–ø–∫–∏
    const buttonStyles = ['btn-style-1', 'btn-style-2', 'btn-style-3', 'btn-style-4'];
    
    for (let i = 0; i < buttonCount; i++) {
        const button = document.createElement('button');
        button.className = `modal-close-btn ${buttonStyles[Math.floor(Math.random() * buttonStyles.length)]}`;
        button.textContent = ['√ó', '‚úñ', '‚ùå', 'üö´'][Math.floor(Math.random() * 4)];
        
        // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        button.style.left = Math.random() * 100 + '%';
        button.style.top = Math.random() * 100 + '%';
        
        // –°–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        button.style.transform = `scale(${0.8 + Math.random() * 0.4})`;
        
        // –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∞ —É–±–µ–≥–∞–µ—Ç
        button.addEventListener('mouseover', (e) => {
            if (Math.random() > 0.3) { // 70% —à–∞–Ω—Å —á—Ç–æ –∫–Ω–æ–ø–∫–∞ —É–±–µ–∂–∏—Ç
                const newLeft = Math.random() * 100;
                const newTop = Math.random() * 100;
                button.style.left = `${newLeft}%`;
                button.style.top = `${newTop}%`;
            }
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ
        button.addEventListener('click', () => {
            if (Math.random() > 0.5) { // 50% —à–∞–Ω—Å —á—Ç–æ –º–æ–¥–∞–ª–∫–∞ –∑–∞–∫—Ä–æ–µ—Ç—Å—è
                modal.remove();
            } else {
                // –ò–Ω–∞—á–µ –º–æ–¥–∞–ª–∫–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –≤ —Å–ª—É—á–∞–π–Ω–æ–µ –º–µ—Å—Ç–æ
                modal.style.left = Math.random() * (window.innerWidth - 400) + 'px';
                modal.style.top = Math.random() * (window.innerHeight - 300) + 'px';
                showNotification('–£–ø—Å!', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!', 'error');
            }
        });
        
        modal.appendChild(button);
    }
    
    // –î–µ–ª–∞–µ–º –º–æ–¥–∞–ª–∫—É –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º–æ–π
    let isDragging = false;
    let currentX;
    let currentY;
    let initialX;
    let initialY;
    
    modal.addEventListener('mousedown', (e) => {
        isDragging = true;
        initialX = e.clientX - modal.offsetLeft;
        initialY = e.clientY - modal.offsetTop;
    });
    
    document.addEventListener('mousemove', (e) => {
        if (isDragging) {
            currentX = e.clientX - initialX;
            currentY = e.clientY - initialY;
            modal.style.left = currentX + 'px';
            modal.style.top = currentY + 'px';
        }
    });
    
    document.addEventListener('mouseup', () => {
        isDragging = false;
    });
    
    document.body.appendChild(modal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
    if (chaosLevel > 2) {
        setInterval(() => {
            if (!isDragging && Math.random() > 0.7) {
                const currentLeft = parseInt(modal.style.left);
                const currentTop = parseInt(modal.style.top);
                
                modal.style.left = (currentLeft + (Math.random() * 40 - 20)) + 'px';
                modal.style.top = (currentTop + (Math.random() * 40 - 20)) + 'px';
            }
        }, 1000);
    }
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é showRandomModal
function showRandomModal() {
    const now = Date.now();
    if (now - lastModalTime > 3000) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é –º–æ–¥–∞–ª–∫—É –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
        lastModalTime = now;
        const message = annoyingMessages[Math.floor(Math.random() * annoyingMessages.length)];
        createFloatingModal(message.title, message.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞–ø—á–∏
function generateCaptcha() {
    const canvas = document.getElementById('captchaCanvas');
    const ctx = canvas.getContext('2d');
    const captchaText = Math.random().toString(36).substring(2, 8).toUpperCase();
    
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    ctx.fillStyle = '#000';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    
    // –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç –∫–∞–ø—á–∏ —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ –∏—Å–∫–∞–∂–µ–Ω–∏—è–º–∏
    for (let i = 0; i < captchaText.length; i++) {
        ctx.font = `${Math.random() * 20 + 20}px Comic Sans MS`;
        ctx.fillStyle = `hsl(${Math.random() * 360}, 100%, 50%)`;
        ctx.rotate(Math.random() * 0.5 - 0.25);
        ctx.fillText(
            captchaText[i],
            30 + i * 30,
            50 + Math.random() * 20
        );
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —à—É–º
    for (let i = 0; i < 100; i++) {
        ctx.fillStyle = `rgb(${Math.random() * 255},${Math.random() * 255},${Math.random() * 255})`;
        ctx.fillRect(Math.random() * canvas.width, Math.random() * canvas.height, 2, 2);
    }
    
    return captchaText;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–ª—ã –ø–∞—Ä–æ–ª—è
function checkPasswordStrength(password) {
    const hasEmoji = /[\uD800-\uDBFF][\uDC00-\uDFFF]/.test(password);
    const hasChinese = /[\u4e00-\u9fa5]/.test(password);
    const hasLength = password.length >= 20;
    
    if (!hasEmoji) {
        return '–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã 5 —ç–º–æ–¥–∑–∏! üò°';
    }
    if (!hasChinese) {
        return '–ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 3 –∏–µ—Ä–æ–≥–ª–∏—Ñ–∞! Êº¢Â≠ó';
    }
    if (!hasLength) {
        return '–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø–∞—Ä–æ–ª—å! –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤!';
    }
    
    return '–ü–∞—Ä–æ–ª—å –ø–æ–¥—Ö–æ–¥–∏—Ç (–Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ)';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(title, message, type = 'info', duration = 3000) {
    const container = document.getElementById('notification-container');
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    
    notification.innerHTML = `
        <div class="notification-title">${title}</div>
        <div class="notification-message">${message}</div>
        <button class="notification-close" onclick="this.parentElement.remove()">√ó</button>
    `;
    
    container.appendChild(notification);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å show –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
        notification.classList.add('show');
    }, 10);
    
    // –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –≤ —Ä–µ–∂–∏–º–µ —Ö–∞–æ—Å–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
    if (chaosLevel > 0) {
        notification.style.transform += ` rotate(${Math.random() * 10 - 5}deg)`;
        if (Math.random() > 0.5) {
            notification.style.animation = `shake ${0.1 + Math.random() * 0.4}s infinite`;
        }
    }
    
    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            notification.remove();
        }, 300);
    }, duration);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–≤–∞—é—â–µ–≥–æ –º–µ–º–∞
function createFloatingMeme() {
    const meme = document.createElement('img');
    meme.className = 'floating-meme';
    meme.src = memeImages[Math.floor(Math.random() * memeImages.length)];
    
    // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
    meme.style.left = Math.random() * window.innerWidth + 'px';
    meme.style.top = Math.random() * window.innerHeight + 'px';
    
    // –°–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä
    const size = 50 + Math.random() * 100;
    meme.style.width = size + 'px';
    
    // –°–ª—É—á–∞–π–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    const duration = 5 + Math.random() * 10;
    meme.style.animation = `float ${duration}s infinite ease-in-out`;
    meme.style.animationDelay = `-${Math.random() * duration}s`;
    
    document.getElementById('memes-container').appendChild(meme);
    
    // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
    setTimeout(() => {
        meme.style.opacity = '0.7';
    }, 100);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —Ö–∞–æ—Å–∞
function applyChaosEffects() {
    const now = Date.now();
    if (now - lastChaosUpdate < chaosInterval) return;
    
    lastChaosUpdate = now;
    chaosLevel++;
    
    const body = document.body;
    const container = document.querySelector('.container');
    const form = document.getElementById('registrationForm');
    const inputs = document.querySelectorAll('.form-control');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —É—Ä–æ–≤–Ω–µ —Ö–∞–æ—Å–∞
    const message = annoyingMessages[Math.floor(Math.random() * annoyingMessages.length)];
    showNotification(message.title, message.message, 
        ['info', 'warning', 'error', 'success'][Math.floor(Math.random() * 4)]);
    
    switch(chaosLevel) {
        case 1:
            body.style.backgroundColor = '#000';
            container.style.backgroundColor = 'rgba(255, 255, 255, 0.9)';
            body.classList.add('chaos-mode');
            setInterval(() => {
                if (Math.random() > 0.7) {
                    const message = annoyingMessages[Math.floor(Math.random() * annoyingMessages.length)];
                    showNotification(message.title, message.message, 
                        ['info', 'warning', 'error', 'success'][Math.floor(Math.random() * 4)]);
                }
            }, 3000);
            setInterval(createFloatingMeme, 2000);
            createFloatingMeme();
            break;
            
        case 2:
            body.style.animation = 'backgroundChange 2s infinite';
            container.style.backdropFilter = 'blur(5px)';
            break;
            
        case 3:
            inputs.forEach(input => {
                input.style.animation = 'shake 0.5s infinite';
            });
            break;
            
        case 4:
            setInterval(() => {
                inputs.forEach(input => {
                    if (Math.random() > 0.7) {
                        input.style.backgroundColor = `hsl(${Math.random() * 360}, 70%, 90%)`;
                    }
                });
            }, 1000);
            break;
            
        case 5:
            inputs.forEach(input => {
                input.addEventListener('mouseover', (e) => {
                    if (Math.random() > 0.5) {
                        const x = Math.random() * 50 - 25;
                        const y = Math.random() * 50 - 25;
                        e.target.style.transform = `translate(${x}px, ${y}px)`;
                    }
                });
            });
            break;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('registrationForm');
    const inputs = document.querySelectorAll('.moving-input');
    const submitBtn = document.getElementById('submitBtn');
    let currentCaptcha = generateCaptcha();
    
    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∫–ª–∞–º—É –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã (–≤–º–µ—Å—Ç–æ 5)
    setInterval(createRandomAd, 3000);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –º–æ–¥–∞–ª–∫–∏
    setInterval(showRandomModal, 5000);
    
    // –ë–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–æ–ª–µ–π
    setInterval(() => {
        inputs.forEach(input => {
            if (Math.random() > 0.5) {
                const width = 50 + Math.random() * 100;
                const height = 20 + Math.random() * 60;
                const marginLeft = Math.random() * 20 - 10;
                input.style.width = `${width}%`;
                input.style.height = `${height}px`;
                input.style.marginLeft = `${marginLeft}%`;
                input.style.transform += ` skew(${Math.random() * 20 - 10}deg)`;
            }
        });
    }, 200);

    // –ú–µ–Ω–µ–µ —á–∞—Å—Ç–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞
    setInterval(() => {
        // –ò–∑–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–≤–µ—Ç–∞ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ñ–æ–Ω
        inputs.forEach(input => {
            input.style.backgroundColor = `rgb(
                ${Math.random() * 255},
                ${Math.random() * 255},
                ${Math.random() * 255}
            )`;
            input.style.color = `rgb(
                ${Math.random() * 255},
                ${Math.random() * 255},
                ${Math.random() * 255}
            )`;
            input.style.borderWidth = `${1 + Math.random() * 5}px`;
            input.style.borderStyle = Math.random() > 0.5 ? 'dotted' : 'dashed';
        });
    }, 100);

    // –ü–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ (—Ä–µ–∂–µ)
    let hue = 0;
    setInterval(() => {
        hue = (hue + 1) % 360;
        document.body.style.backgroundColor = `hsl(${hue}, 70%, 60%)`;
    }, 1000); // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    
    // –û—Ç–∫–ª—é—á–∞–µ–º –∑–≤—É–∫ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ)
    // const audio = document.getElementById('annoying-sound');
    // audio.volume = 0.5;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏
    document.addEventListener('mousemove', (e) => {
        const now = Date.now();
        if (now - lastMouseMove > 100) {
            // audio.play(); // –æ—Ç–∫–ª—é—á–∞–µ–º –∑–≤—É–∫
            lastMouseMove = now;
            
            inputs.forEach(input => {
                if (Math.random() > 0.8) {
                    const rect = input.getBoundingClientRect();
                    const mouseX = e.clientX;
                    const mouseY = e.clientY;
                    
                    const deltaX = (rect.left + rect.width/2) - mouseX;
                    const deltaY = (rect.top + rect.height/2) - mouseY;
                    
                    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
                    const repulsion = Math.max(0, 1 - distance/200);
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–∏ –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–Ω–∏–∏
                    const scale = 0.8 + Math.random() * 0.6; // –æ—Ç 0.8 –¥–æ 1.4
                    
                    input.style.transform = `
                        translate(${deltaX * repulsion}px, ${deltaY * repulsion}px)
                        rotate(${Math.random() * 360}deg)
                        scale(${scale})
                    `;
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ä—Ü–∞–Ω–∏–µ –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫—É—Ä—Å–æ—Ä–∞
                    if (distance < 100) {
                        input.style.filter = `hue-rotate(${Math.random() * 360}deg) brightness(${1 + Math.random()})`;
                    }
                }
            });
        }
    });
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–≤–æ–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ)
    const phoneInput = document.getElementById('phone');
    phoneInput.addEventListener('input', (e) => {
        const value = e.target.value.replace(/[^01]/g, '');
        e.target.value = value;
        
        if (!/^[01]+$/.test(value)) {
            showNotification('–û—à–∏–±–∫–∞', '–¢–æ–ª—å–∫–æ –¥–≤–æ–∏—á–Ω—ã–µ —Ü–∏—Ñ—Ä—ã! –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä –≤ –¥–≤–æ–∏—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!', 'error');
        }
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
    const passwordInput = document.getElementById('password');
    const strengthDiv = document.getElementById('password-strength');
    
    passwordInput.addEventListener('input', () => {
        const message = checkPasswordStrength(passwordInput.value);
        strengthDiv.textContent = message;
        strengthDiv.style.backgroundColor = message.includes('–ø–æ–¥—Ö–æ–¥–∏—Ç') ? '#00ff00' : '#ff0000';
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Ö–∞–æ—Å–∞ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    setInterval(applyChaosEffects, 1000);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', (e) => {
        e.preventDefault();
        formSubmissions++;
        
        const captchaInput = document.getElementById('captchaInput');
        if (captchaInput.value !== currentCaptcha) {
            captchaAttempts++;
            createFloatingModal('–û—à–∏–±–∫–∞!', '–ù–µ–≤–µ—Ä–Ω–∞—è –∫–∞–ø—á–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!');
            currentCaptcha = generateCaptcha();
            captchaInput.value = '';
            return;
        }
        
        if (formSubmissions < 3) {
            createFloatingModal('–û—à–∏–±–∫–∞!', '–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ! –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if (Math.random() > 0.1) { // 90% —à–∞–Ω—Å –æ—à–∏–±–∫–∏
            failedAttempts++;
            const errorMessage = annoyingMessages[Math.floor(Math.random() * annoyingMessages.length)];
            createFloatingModal(errorMessage.title, errorMessage.message);
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É—Å–ø–µ—Ö–∞
        createFloatingModal('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!', '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–∞–≤–µ—Ä–Ω–æ–µ...');
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            form.reset();
            currentCaptcha = generateCaptcha();
        }, 2000);
    });
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∫–∞–ø—á—É –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∫–ª–∏–∫–µ –Ω–∞ canvas
    document.getElementById('captchaCanvas').addEventListener('click', () => {
        currentCaptcha = generateCaptcha();
    });
});

// –ó–∞–ø—Ä–µ—â–∞–µ–º –ø—Ä–∞–≤—ã–π –∫–ª–∏–∫
document.addEventListener('contextmenu', (e) => {
    e.preventDefault();
    showNotification('–û—à–∏–±–∫–∞', '–ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –∑–∞–ø—Ä–µ—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–µ–≤—ã–π –∫–ª–∏–∫!', 'error');
});

// –ó–∞–ø—Ä–µ—â–∞–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
document.addEventListener('copy', (e) => {
    e.preventDefault();
    showNotification('–û—à–∏–±–∫–∞', '–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ! –í–≤–æ–¥–∏—Ç–µ –≤—Å–µ –≤—Ä—É—á–Ω—É—é!', 'error');
});

// –ó–∞–ø—Ä–µ—â–∞–µ–º –≤—Å—Ç–∞–≤–∫—É
document.addEventListener('paste', (e) => {
    e.preventDefault();
    showNotification('–û—à–∏–±–∫–∞', '–í—Å—Ç–∞–≤–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞! –í–≤–æ–¥–∏—Ç–µ –≤—Å–µ –≤—Ä—É—á–Ω—É—é!', 'error');
}); 